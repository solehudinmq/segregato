exit
FileUtils.rm_r(db_location)
FileUtils.rm_r
FileUtils
db_location
File.exist?(db_location)
exit
File.exist?("#{Dir.pwd}/db")
Dir.pwd
Pwd
File.exist?('../db')
c
expect(post.title).to eq 'Post 1 Title'
post.title == 'Post 1 Title'
post.title
post
c
PostCommand.delete_all
PostCommand.delete
PostCommand.delete_all
PostCommand.delete_all!
PostCommand.create
PostCommand.save
PostCommand.delete_all
PostCommand.all
PostQuery.reload.methods.select {|x|x == :delete_all}
PostQuery.methods.select {|x|x == :delete_all}
PostCommand.methods.select {|x| x == :delete_all }
PostCommand.methods.include?(:delete_all)
PostCommand.methods
c
FORBIDDEN_READ_METHODS
c
Segregato::Config.master_config
c
PostCommand
PostCommand.methods
c
PostCommand.new
PostCommand
require_relative 'spec/post_command'
c
PostCommand
include Segregato
c
copy_sqlite_data
require_relative 'spec/replica_simulation'
exit
Segregato::Config.master_config
Segregato::Config.methods
Segregato::Config
Segregato
